law_divby_self: x/x = 1
law_mult_reciprocal: x * (x^(-1)) = 1
law_addition: derive(x, a + b) = derive(x, a) + derive(x, b)
law_add_zero: x + 0 = x
law_add_zero2: 0 + x = x
law_mult_zero: 0 * x = 0
law_mult_zero2: x * 0 = 0
law_mult_one: a * 1 = a
law_mult_one2: 1 * a = a
law_add_negative: p + (-q) = p - q
law_product: derive(x, a * b) = (derive(x, a) * b) + (a * derive(x, b))
law_sin: derive(x, sin(a)) = cos(a) * derive(x, a)
law_cos: derive(x, cos(a)) = (-sin(a)) * derive(x, a)
law_ln: derive(x, ln(a)) = (1/a) * derive(x, a)
law_power: derive(x, a^b) = (a^b) * derive(x, b * ln(a))
law_self: derive(x, x) = 1
law_derive_const: derive(x, p) = 0
law_derive_const_negative: derive(x, (-p)) = 0
law_exponent_one: a^1 = a
law_exponent_to_fraction: a/b = a * (b^(-1))
law_add_exponents: (a^b) + (a^c) = a^(b+c)
law_add_exponents_with_const: (a^b) * (p * (a^c)) = p * (a^(b+c))